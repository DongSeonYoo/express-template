generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comment_tb {
  idx        Int       @id(map: "comment_tb_pk") @default(autoincrement())
  user_idx   Int
  post_idx   Int
  content    String
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  post_tb    post_tb   @relation(fields: [post_idx], references: [idx], onDelete: NoAction, onUpdate: NoAction, map: "comment_tb_post_tb_idx_fk")
  user_tb    user_tb   @relation(fields: [user_idx], references: [idx], onDelete: NoAction, onUpdate: NoAction, map: "comment_tb_user_tb_idx_fk")
}

model post_tb {
  idx        Int          @id(map: "post_tb_pk") @default(autoincrement())
  user_idx   Int
  title      String       @db.VarChar
  content    String
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?    @db.Timestamptz(6)
  comment_tb comment_tb[]
  user_tb    user_tb      @relation(fields: [user_idx], references: [idx], onDelete: NoAction, onUpdate: NoAction, map: "post_tb_user_tb_idx_fk")
}

model user_tb {
  idx        Int          @id @default(autoincrement())
  email      String       @unique(map: "user_email_unique") @db.VarChar
  name       String       @db.VarChar
  password   String       @db.Char(60)
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?    @db.Timestamptz(6)
  comment_tb comment_tb[]
  post_tb    post_tb[]
}
